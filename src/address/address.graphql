type Address {
  _id: ID!
  street: String!
  city: String!
  state: String!
  zipCode: String!
  apartment: String
  userId: String!
  isDefault: Boolean!
  label: String
  coordinates: [Float!]!
}

input CreateAddressInput {
  street: String!
  city: String!
  state: String!
  zipCode: String!
  apartment: String
  userId: String!
  isDefault: Boolean = false
  label: String
  coordinates: [Float!] = [0, 0]
}

input UpdateAddressInput {
  id: String!
  street: String
  city: String
  state: String
  zipCode: String
  apartment: String
  isDefault: Boolean
  label: String
  coordinates: [Float!]
}

input AddressFilterInput {
  userId: String
  city: String
  state: String
  isDefault: Boolean
  label: String
}

type Query {
  addresses(filter: AddressFilterInput): [Address!]!
  address(id: ID!): Address
  addressesByUser(userId: String!): [Address!]!
  defaultAddress(userId: String!): Address
}

type Mutation {
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: ID!): Boolean!
  setDefaultAddress(id: ID!): Address!
}
