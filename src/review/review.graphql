scalar Date

type Review {
  _id: ID!
  productId: ID!
  userId: ID!
  rating: Int!
  title: String!
  comment: String!
  imageUrls: [String]
  createdAt: Date!
  isVisible: Boolean!
  orderId: ID
}

input CreateReviewInput {
  productId: ID!
  rating: Int!
  title: String!
  comment: String!
  imageUrls: [String]
  orderId: ID
}

input UpdateReviewInput {
  _id: ID!
  rating: Int
  title: String
  comment: String
  imageUrls: [String]
  isVisible: Boolean
}

input ReviewFilterInput {
  productId: ID
  userId: ID
  minRating: Int
  orderId: ID
  isVisible: Boolean
}

type Query {
  reviews(filter: ReviewFilterInput): [Review!]!
  review(id: ID!): Review!
  productReviews(productId: ID!): [Review!]!
  userReviews: [Review!]!
  productAverageRating(productId: ID!): Float!
}

type Mutation {
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  removeReview(id: ID!): Boolean!
  adminUpdateReview(updateReviewInput: UpdateReviewInput!): Review!
}
