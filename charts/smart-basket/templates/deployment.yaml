apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smart-basket.fullname" . }}
  labels:
    {{- include "smart-basket.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "smart-basket.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "smart-basket.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "smart-basket.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: {{ .Values.environment.NODE_ENV }}
            {{- if .Values.secrets.enabled }}
            - name: PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: PORT
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DATABASE_URI
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: JWT_SECRET
            - name: JWT_REFRESH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: JWT_REFRESH_SECRET
            - name: JWT_EXPIRES_IN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: JWT_EXPIRES_IN
            - name: JWT_REFRESH_EXPIRES_IN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: JWT_REFRESH_EXPIRES_IN
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: GOOGLE_CLIENT_SECRET
            - name: GOOGLE_REDIRECT_URIS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: GOOGLE_REDIRECT_URIS
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: AWS_REGION
            - name: AWS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: AWS_BUCKET_NAME
            - name: FIREBASE_PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: FIREBASE_PROJECT_ID
            - name: FIREBASE_CLIENT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: FIREBASE_CLIENT_EMAIL
            - name: FIREBASE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: FIREBASE_PRIVATE_KEY
            - name: FIREBASE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: FIREBASE_DATABASE_URL
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: STRIPE_SECRET_KEY
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
